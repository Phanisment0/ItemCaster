plugins {
	id "com.gradleup.shadow" version "8.3.0"
	id "java-library"
	id "java"
}

group = project.group
version = project.version

base {
	archivesName = project.archivesName
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.papermc.io/repository/maven-public/" }
	maven { url "https://repo.codemc.io/repository/maven-public/" }
	maven { url "https://mvn.lumine.io/repository/maven-public/" }
	maven { url "https://repo.extendedclip.com/releases/" }
	maven { url "https://repo.oraxen.com/releases" }
	maven { url "https://repo.nexomc.com/releases" }
	maven { url "https://maven.devs.beer/" }
	maven { url "https://jitpack.io" }
	/*
	maven {
		url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
		content {
			includeGroup "org.bukkit"
			includeGroup "org.spigotmc"
		}
	}
	*/
}

dependencies {
	implementation "fr.mrmicky:fastinv:${project.fastinv_version}"
	compileOnly "io.papermc.paper:paper-api:${project.api_version}"
//compileOnly "org.spigotmc:spigot-api:${project.api_version}"
	compileOnly "com.google.code.gson:gson:${project.gson_version}"
	compileOnly "me.clip:placeholderapi:${project.placeholder_api_version}"
	compileOnly "io.lumine:Mythic-Dist:${project.mythicmobs_version}"
	compileOnly "de.tr7zw:item-nbt-api-plugin:${project.nbt_api_version}"
	compileOnly "dev.lone:api-itemsadder:${project.itemsadder_version}"
	compileOnly "io.th0rgal:oraxen:${project.oraxen_version}"
	compileOnly "com.nexomc:nexo:${project.nexo_version}"
	
	compileOnly "net.kyori:adventure-api:${project.adventure_version}"
	compileOnly "net.kyori:adventure-text-minimessage:${project.adventure_version}"
	compileOnly "net.kyori:adventure-text-serializer-legacy:${project.adventure_version}"
}

tasks.shadowJar {
	archiveClassifier = ""
	relocate "fr.mrmicky.fastinv", "io.phanisment.itemcaster.lib"
}

tasks.processResources {
	def props = [
		"version"		: project.version,
		"main_class": project.main_class
	]
	inputs.properties(props)
	filesMatching("plugin.yml") {
		expand(props)
	}
}

tasks.javadoc {
	title = "ItemCaster"
	destinationDir = file("docs")
	options.memberLevel = JavadocMemberLevel.PRIVATE
	options.author = true
	options.version = true
	
	options.links("https://docs.oracle.com/en/java/javase/21/docs/api/")
	options.links("https://jd.papermc.io/paper/1.21.4/")
	options.linksOffline(
		"https://www.mythiccraft.io/javadocs/mythic/",
		"https://www.mythiccraft.io/javadocs/mythic/"
	)
}

tasks.jar {
	from("LICENSE") {
		into(".")
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	toolchain.languageVersion.set(JavaLanguageVersion.of(21))
	withSourcesJar()
}